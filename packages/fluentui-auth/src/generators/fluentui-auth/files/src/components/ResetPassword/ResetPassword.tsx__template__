import { PrimaryButton, Stack, Text } from '@fluentui/react';
import { Form, PasswordInputField } from '@raftlabs/react-hook-form-fluentui';
import { useAuth } from '@raftlabs/firebase-react';
import {
  checkActionCode,
  confirmPasswordReset,
  verifyPasswordResetCode,
} from 'firebase/auth';
import { useRouter } from 'next/router';
import React, { useCallback, useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';
import ResetPasswordSchema from './reset-password.schema';

export default function ResetPassword() {
  const [isActionCodeValid, setActionCodeValid] = useState(false);
  const [loading, setLoading] = useState(true);
  const { auth } = useAuth();
  const router = useRouter();
  const oobCode = router.query['oobCode'] as string;

  useEffect(() => {
    if (oobCode) {
      checkActionCode(auth, oobCode)
        .then((res) => {
          console.log(res);
          setActionCodeValid(true);
        })
        .catch((err) => {
          console.log(err);
          alert('Invalid oobCode');
        });
      setLoading(false);
    }
  }, [auth, oobCode]);

  const formHook = useForm({
    resolver: ResetPasswordSchema,
    defaultValues: {
      newPassword: '',
    },
    reValidateMode: 'onSubmit',
    mode: 'all',
  });

  const onSubmit = useCallback(
    ({ newPassword }) => {
      try {
        verifyPasswordResetCode(auth, oobCode)
          .then((res) => {
            console.log(res);
            confirmPasswordReset(auth, oobCode, newPassword)
              .then((res) => {
                console.log(res);
                router.push('/');
              })
              .catch((err) => {
                alert('Reset password fail');
              });
          })
          .catch((err) => {
            alert('could not find email');
          });
      } catch (er) {
        console.log(er);
        throw er;
      }
    },
    [auth, oobCode, router]
  );

  return (
    <>
      {isActionCodeValid ? (
        <Form formHook={formHook} onSubmit={onSubmit}>
          <Stack.Item>
            <Text variant="xxLarge">Reset Password</Text>
          </Stack.Item>
          <Stack.Item>
            <PasswordInputField
              required={true}
              label="New Password"
              formHook={formHook}
              Styles={{ root: { width: 300 } }}
              name="newPassword"
              strengthMeter={true}
            />
          </Stack.Item>
          <Stack.Item>
            <PrimaryButton type="submit" text="Submit" />
          </Stack.Item>
        </Form>
      ) : (
        <h1>Link Expired please try again</h1>
      )}
    </>
  );
}
